{
  "meta": {
    "project": "ODIADEV Assistant Voice-First Chat Widget",
    "date": "2025-09-03",
    "prepared_by": "Generated by TestSprite"
  },
  "product_overview": "ODIADEV Assistant is an embeddable voice-first chat widget designed to provide a premium, fast, and responsive conversational experience on ODIADEV product sites. It enables visitors to interact via voice or text, guides them through onboarding, captures qualified leads, and supports conversions with a smooth PWA-compatible client and secure proxy backend.",
  "core_goals": [
    "Deliver an embeddable chat widget powering voice/text conversations with continuous listening and voice activity detection.",
    "Enable voice-led onboarding to capture qualified leads with personal details and business use cases.",
    "Support seamless lead capture, demo bookings, and free credit signups via guided CTAs.",
    "Ensure exceptional performance and reliability on low-to-mid range Android devices in Nigeria.",
    "Provide secure, private handling of user data with domain-locked API keys, rate limiting, and audit logging.",
    "Enable easy integration on Lovable React+Vite sites with a small UMD bundle and simple script tag embedding.",
    "Offer offline support and PWA features including manifest, service worker caching, and background sync for queued requests.",
    "Provide admin functionality to issue and revoke public site keys with quotas and domain restrictions."
  ],
  "key_features": [
    "Embeddable UMD chat widget (<80KB gzipped) with adaptive light/dark themes and keyboard accessible UI.",
    "Voice capabilities with continuous listening after explicit mic consent, smart voice activity detection, and barge-in interruption.",
    "Multi-step conversational onboarding capturing name, email, phone, and business use case with validation and auto-advance.",
    "Server-side proxy API for chat, TTS, voice list, lead and signup endpoints securing upstream API keys and enforcing CORS and rate limits.",
    "In-house Text-to-Speech integration providing Nigerian English voices for TTS playback with toggleable sound.",
    "PWA compliance with installability, offline fallback, background sync for chat and lead submission retrying.",
    "Analytics event hooks for widget lifecycle, consent events, chat flow, lead capture, and signup funnel tracking.",
    "Admin API for issuing and revoking public API keys bound by domain and quotas, with audit logging and security headers.",
    "Compliance with privacy by limiting PII storage and anonymizing logs; enforce input validation and profanity filters."
  ],
  "user_flow_summary": [
    "First Visit: Page loads with cached PWA shell, widget renders collapsed with 'Enable voice' chip. User taps to grant mic permission, enabling continuous listening and assistant greeting.",
    "Conversational Onboarding: Assistant guides user through name, email, phone, and business use case collection with voice/text inputs and validation. On completion, lead is submitted and CTAs for signup/demo/human contact are shown.",
    "Return Visit: Widget remembers prior consent and user profile, offers personalized greeting and resumes assistant interaction without requesting permission again.",
    "Offline Mode: Widget informs user of offline status, queues their chat/lead requests, and uses background sync to process when back online.",
    "API Interactions: Widget communicates via proxy endpoints for chat, TTS playback, lead submission, and signup initiation with response handling and error fallback.",
    "Admin Console: Admin issues or revokes domain-bound public site keys controlling widget access and quotas for multiple ODIADEV sites."
  ],
  "validation_criteria": [
    "Health Check: /healthz endpoint responds with {ok:true} within 200ms.",
    "Voices Endpoint: /api/voices returns expected Nigerian English voice options including 'naija_female'.",
    "TTS Functionality: /api/tts returns valid audio/mpeg stream for given text input.",
    "Voice Consent & Continuous Listening: Widget prompts mic permission on first use; after consent, continuously listens and auto-sends on silence using VAD.",
    "Barge-in Support: User speech interrupts TTS playback correctly and new input is captured without loss.",
    "Onboarding Lead Capture: Completing onboarding successfully posts lead data returning {ok:true}, triggering analytics events.",
    "API Security: Only origins from allowlist permitted; rate limits enforced with HTTP 429 on excess requests.",
    "Widget Performance: Initial load main thread work under 200ms; bundle size under 80KB gzipped; PWA Lighthouse scores â‰¥ 90 for performance and PWA compliance.",
    "Accessibility: Widget UI conforms to WCAG AA standards with keyboard navigation, ARIA labels, and captions toggle.",
    "Privacy & Data Handling: Sensitive PII limited to captured fields; logs anonymize IP; input sanitized with profanity filtering.",
    "Offline Behavior: Widget queues interactions while offline and successfully retries submissions when connectivity restores.",
    "Admin API: Admin key issuance and revocation works securely with audit logs and proper authorization."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "React 18",
      "Vite",
      "Tailwind CSS",
      "Zustand",
      "Framer Motion",
      "GSAP",
      "Lenis",
      "React Router",
      "Supabase",
      "Vercel API Routes",
      "Node.js",
      "Express",
      "Zod",
      "Axios"
    ],
    "features": [
      {
        "name": "Premium Voice AI Website",
        "description": "Main website with IEQ-style premium design, responsive layout, and smooth animations",
        "files": [
          "src/App.tsx",
          "src/main.tsx",
          "src/index.css",
          "src/pages/Home.tsx",
          "src/pages/Pricing.tsx",
          "src/pages/Resources.tsx"
        ]
      },
      {
        "name": "Floating Chat Widget",
        "description": "Persistent floating chat widget with voice capabilities, avatar selection, and session persistence",
        "files": [
          "src/components/chat/FloatingChatWidget.tsx",
          "src/components/chat/AvatarPicker.tsx",
          "src/components/chat/MessageList.tsx",
          "src/components/chat/Composer.tsx",
          "src/components/chat/VoiceToggle.tsx",
          "src/components/chat/MicButton.tsx"
        ]
      },
      {
        "name": "CRM Dashboard",
        "description": "Complete CRM dashboard with leads management, conversation tracking, and analytics",
        "files": [
          "src/pages/dashboard/Index.tsx"
        ]
      },
      {
        "name": "Contact Form & Lead Capture",
        "description": "Contact form with lead capture functionality and security headers",
        "files": [
          "src/pages/Contact.tsx"
        ]
      },
      {
        "name": "State Management",
        "description": "Zustand-based state management with localStorage persistence for chat sessions",
        "files": [
          "src/store/chatStore.ts"
        ]
      },
      {
        "name": "Layout Components",
        "description": "Navigation and footer components with responsive design",
        "files": [
          "src/components/layout/Navbar.tsx",
          "src/components/layout/Footer.tsx"
        ]
      },
      {
        "name": "UI Components",
        "description": "Premium UI components with animations and responsive design",
        "files": [
          "src/components/ui/PremiumHero.tsx",
          "src/components/ui/ValueGrid.tsx",
          "src/components/ui/WhatWeDoSplit.tsx",
          "src/components/ui/CtaBand.tsx"
        ]
      },
      {
        "name": "TTS API Integration",
        "description": "Text-to-Speech API integration with multiple voice options",
        "files": [
          "api/tts.ts"
        ]
      },
      {
        "name": "Chat API",
        "description": "Chat API endpoint for AI conversation handling",
        "files": [
          "api/chat.ts"
        ]
      },
      {
        "name": "Events API",
        "description": "Events API for lead capture, conversation tracking, and webhook integration",
        "files": [
          "api/events.ts"
        ]
      },
      {
        "name": "Brain Services",
        "description": "AI brain services for lead qualification and conversation summarization",
        "files": [
          "api/brain/qualify.ts",
          "api/brain/summarize.ts"
        ]
      },
      {
        "name": "Security & CORS",
        "description": "Security utilities for CORS handling, HMAC signatures, and rate limiting",
        "files": [
          "api/_lib/cors.ts",
          "api/_lib/sign.ts"
        ]
      },
      {
        "name": "Development Configuration",
        "description": "Development configuration with fallback responses and environment setup",
        "files": [
          "src/config/development.ts"
        ]
      },
      {
        "name": "Render Backend Service",
        "description": "Express.js backend service for AI processing and qualification",
        "files": [
          "render-brain/server.js",
          "render-brain/package.json"
        ]
      },
      {
        "name": "Database Schema",
        "description": "Supabase database schema for leads, intake, and conversations",
        "files": [
          "supabase/migrations/001_init.sql",
          "supabase/migrations/001_initial_schema.sql"
        ]
      },
      {
        "name": "Automation Workflow",
        "description": "n8n automation workflow for event processing and notifications",
        "files": [
          "n8n-workflow.json"
        ]
      },
      {
        "name": "Build & Deployment",
        "description": "Build configuration, deployment settings, and environment management",
        "files": [
          "vercel.json",
          "vite.config.ts",
          "tailwind.config.js",
          "tsconfig.json",
          "package.json",
          ".env.example"
        ]
      }
    ]
  }
}
